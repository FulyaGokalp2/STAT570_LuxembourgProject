---
title: "Luxemburg Project"
format: pdf
editor: visual
execute: 
  cache: true
toc: true
number-sections: true
---

## Luxemburg Data Project

We'll download house price data from Luxembourg, a small European country. Luxembourg is divided into Cantons, which are equivalent to States in the USA, and further subdivided into Communes, akin to Counties in the American context. Interestingly, one of these Cantons and Communes shares the same name as the country, Luxembourg, and holds the status of both a city and the national capital, known as Luxembourg City or just Luxembourg.

```{r libraries}
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(janitor)
```

## Getting Data

```{r}
# The link for the data 
url <- "https://is.gd/1vvBAc"

raw_data <- tempfile(fileext = ".xlsx")

download.file(url, raw_data, method = "auto",
              mode = "wb")

sheets <- excel_sheets(raw_data)

read_clean <- function(..., sheet){
  read_excel(..., sheet = sheet) |>
    mutate(year = sheet)
}


raw_data <- map(
  sheets,
  ~read_clean(raw_data,
              skip = 10,
              sheet = .)
) |> 
  bind_rows() |> 
  clean_names()
```

Let's see the neat data:

```{r}
raw_data
```

Some variables has their original names and we will change them to English.

```{r}
raw_data <- raw_data |>
  rename(
    locality = commune,
    n_offers = nombre_doffres,
    average_price_nominal_euros = prix_moyen_annonce_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant
  ) |>
  mutate(locality = str_trim(locality)) |>
  select(year, locality, n_offers, starts_with("average"))
```

Let's find typos or different spelling in the data:

```{r}
raw_data |> 
  filter(grepl("Luxembourg", locality)) |> 
  count(locality)

raw_data |> 
  filter(grepl("P.tange", locality)) |> 
  count(locality)
```
